#user  nobody;
worker_processes  auto;

#error_log  logs/error.log  notice;
error_log  logs/error.log;

#pid        logs/nginx.pid;


events {
    worker_connections  10240;
}
env kube_config_host;
env kube_config_port;
env kube_config_token;


http {
    include       mime.types;
    server_tokens off;
    #default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";
        lua_shared_dict upstream_sh_data 1000M;
	init_by_lua_block {
		require("resty.core")
		collectgarbage("collect")
		local process = require "ngx.process"
 		local ok, err = process.enable_privileged_agent() 
		local ok, res = pcall(require, "balancer")
		if not ok then
		error("require failed: " .. tostring(res))
		else
		balancer = res
		end
	}
	init_worker_by_lua_file lua/init_work.lua;
	upstream upstream_balancer {
		server 0.0.0.1; # placeholder
		keepalive 32; 
		balancer_by_lua_block {
			balancer.balance()
		}
	}
        proxy_next_upstream_tries 3;
	keepalive_requests 5000;
	include conf.d/*.conf;

}
